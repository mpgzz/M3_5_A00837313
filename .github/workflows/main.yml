name: Build and Deploy Frontend and Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies for Linting
        run: npm install --prefix front

      - name: Run Frontend Lint
        run: npm run lint --prefix front
        continue-on-error: true

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'pull_request' || needs.lint.result == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Clean frontend node_modules and package-lock.json
        run: |
          rm -rf node_modules package-lock.json
        working-directory: ./front

      - name: Install frontend dependencies
        run: npm install --legacy-peer-deps
        working-directory: ./front

      - name: Build frontend
        run: npm run build
        working-directory: ./front

      - name: Deploy frontend to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "front/build"
          output_location: "/"
          api_location: ""

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-and-deploy-frontend
    if: github.event_name == 'pull_request' || needs.build-and-deploy-frontend.result == 'success'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install zip
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Create backend ZIP file
        run: |
          zip -r backend.zip server.js Back/ package.json -x "node_modules/*" ".git/*" ".github/*" ".env*"
        working-directory: .

      - name: Deploy backend to Azure App Service via ZipDeploy
        run: |
          curl -X POST "https://${{ secrets.AZURE_WEBAPP_BACKEND_NAME }}.scm.azurewebsites.net/api/zipdeploy" \
          -u "${{ secrets.AZURE_WEBAPP_BACKEND_PUBLISH_PROFILE }}" \
          --data-binary @"backend.zip"
        env:
          NODE_ENV: production
